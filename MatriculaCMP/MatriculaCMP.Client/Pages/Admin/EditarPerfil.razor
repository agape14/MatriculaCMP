@page "/admin/perfiles/{Id:int}"
@using MatriculaCMP.Shared
@inject HttpClient Http
@inject NavigationManager Nav
@inject IJSRuntime Js

@* <h3>Editar Perfil #@_id</h3> *@

@if (_cargando)
{
    <em>Cargando…</em>
}
else if (!string.IsNullOrEmpty(_error))
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @_error
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container-fluid">
    <!-- start page title -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Perfil</h4>

                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="javascript: void(0);">Inicio</a></li>
                        <li class="breadcrumb-item active">Perfil / Editar Perfil</li>
                    </ol>
                </div>

            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <h5 class="card-header card-title bg-primary">Editar Perfil</h5>
                <div class="card-body  pt-0">
                    <EditForm Model="_model" OnValidSubmit="Guardar">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row mt-2">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Nombre del perfil *</label>
                                    <InputText @bind-Value="_model.Nombre"
                                               class="form-control mb-3"
                                               placeholder="Nombre del perfil" />
                                </div>
                            </div>
                        </div> 

                        <button class="btn btn-primary waves-effect waves-light" type="submit" disabled="@_guardando">
                            <i class="ri-save-line align-middle"></i> Guardar
                        </button>
                        <button class="btn btn-secondary  waves-effect waves-light ms-2" type="button" @onclick="Volver">
                            <i class="ri-arrow-go-back-line"></i> Cancelar
                        </button>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>



@code {
    [Parameter] public int Id { get; set; }

    private int _id;
    private Perfil _model = new();
    private bool _cargando = true;
    private bool _guardando = false;
    private string? _error;

    protected override async Task OnParametersSetAsync()
    {
        _id = Id;
        _cargando = true;
        _error = null;

        try
        {
            _model = await Http.GetFromJsonAsync<Perfil>($"/api/perfiles/{_id}") ?? new Perfil();
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _cargando = false;
        }
    }

    async Task Guardar()
    {
        if (_guardando) return;
        _guardando = true;

        try
        {
            var resp = await Http.PutAsJsonAsync($"/api/perfiles/{_id}", _model);

            if (!resp.IsSuccessStatusCode)
            {
                _error = $"Error {(int)resp.StatusCode}: {await resp.Content.ReadAsStringAsync()}";
                return;
            }

            Volver(); // éxito → vuelve a la lista
        }
        catch (Exception ex)
        {
            _error = ex.Message;
        }
        finally
        {
            _guardando = false;
        }
    }

    void Volver() => Nav.NavigateTo("/admin/perfiles");
}