@page "/secretariageneral/firmar-diplomas"
@using MatriculaCMP.Shared
@using static MatriculaCMP.Shared.FirmaDigitalDTO
@using System.Text.Json;
@inject HttpClient Http
@inject IJSRuntime JS


<div class="container-fluid">
    <!-- start page title -->
    <div class="row">
        <div class="col-12">
            <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Secretaria General - Listado Diplomas</h4>

                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="javascript: void(0);">Inicio</a></li>
                        <li class="breadcrumb-item active">Listado Diplomas</li>
                    </ol>
                </div>

            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body  pt-0">
                    <ul class="nav nav-tabs nav-tabs-custom mb-4">
                        <li class="nav-item">
                            <a class="nav-link fw-bold p-3 @(tabActiva == "nacionales" ? "active" : "")"
                               @onclick='() => CambiarTab("nacionales")'>Solicitudes Nacionales</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link fw-bold p-3 @(tabActiva == "extranjeros" ? "active" : "")"
                               @onclick='() => CambiarTab("extranjeros")'>Solicitudes Extranjeros</a>
                        </li>
                    </ul>
                    @if (tabActiva == "nacionales")
                    {
                        <div class="alert alert-primary mb-2 mt-2" role="alert">
                            <div class="button-items">
                                <button type="button" class="btn btn-primary">
                                    <i class="ri-fingerprint-fill align-middle me-2"></i> Firmar en Lote
                                </button>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-centered datatable">
                                <thead class="thead-light">
                                    <tr>
                                        <th>
                                            <input type="checkbox" class="form-check-input" checked="@seleccionarTodos" @onchange="SeleccionarTodasFilas" />
                                        </th>
                                        <th>DNI</th>
                                        <th>Nombres Completos</th>
                                        <th>Fecha Nac.</th>
                                        <th>Lugar Nac.</th>
                                        <th>Estado</th>
                                        <th>Acción</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var alumno in alumnos)
                                    {
                                        <tr @onclick="() => alumno.Seleccionado = !alumno.Seleccionado" style="cursor: pointer;">
                                            <td>
                                                <input type="checkbox" class="form-check-input" @bind="alumno.Seleccionado" @onclick:stopPropagation="true" />
                                            </td>
                                            <td>@alumno.Numero</td>
                                            <td>@alumno.NombreCompleto</td>
                                            <td>@alumno.FechaNacimiento</td>
                                            <td>@alumno.LugarNacimiento</td>
                                            <td>
                                                @if (alumno.Estado == "Registrado")
                                                {
                                                    <div class="badge bg-info">Registrado</div>
                                                }
                                                else if (alumno.Estado == "Por Subsanar")
                                                {
                                                    <div class="badge bg-warning">Por Subsanar</div>
                                                }
                                                else if (alumno.Estado == "Rechazado")
                                                {
                                                    <div class="badge bg-danger">Rechazado</div>
                                                }
                                                else if (alumno.Estado == "Aprobado")
                                                {
                                                    <div class="badge bg-success">Aprobado</div>
                                                }
                                            </td>
                                            <td>
                                                <a href="javascript:void(0);" class="me-3 text-info" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Ver">
                                                    <i class="ri-eye-fill font-size-18"></i>
                                                </a>
                                                <a href="javascript:void(0);" class="me-3 text-warning" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Asignar Colegiatura">
                                                    <i class="ri-medal-fill font-size-18"></i>
                                                </a>
                                                <a href="javascript:void(0);" class="text-primary" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Firmar Asignaciones">
                                                    <i class="ri-fingerprint-fill font-size-18"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else if (tabActiva == "extranjeros")
                    {
                        <div class="alert alert-primary mb-2 mt-2" role="alert">
                            <div class="button-items">
                                <button type="button" class="btn btn-primary">
                                    <i class="ri-fingerprint-fill align-middle me-2"></i> Firmar Asignaciones
                                </button>
                            </div>
                        </div>

                        <div class="table-responsive">
                            <table class="table table-centered datatable">
                                <thead class="thead-light">
                                    <tr>
                                        <th>
                                            <input type="checkbox" class="form-check-input" checked="@seleccionarTodos" @onchange="SeleccionarTodasFilas" />
                                        </th>
                                        <th>Carnet Ext.</th>
                                        <th>Nombres Completos</th>
                                        <th>Fecha Nac.</th>
                                        <th>Lugar Nac.</th>
                                        <th>Estado</th>
                                        <th>Acción</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var alumno in alumnos2)
                                    {
                                        <tr @onclick="() => alumno.Seleccionado = !alumno.Seleccionado" style="cursor: pointer;">
                                            <td>
                                                <input type="checkbox" class="form-check-input" @bind="alumno.Seleccionado" @onclick:stopPropagation="true" />
                                            </td>
                                            <td>@alumno.Numero</td>
                                            <td>@alumno.NombreCompleto</td>
                                            <td>@alumno.FechaNacimiento</td>
                                            <td>@alumno.LugarNacimiento</td>
                                            <td>
                                                @if (alumno.Estado == "Registrado")
                                                {
                                                    <div class="badge bg-info">Registrado</div>
                                                }
                                                else if (alumno.Estado == "Por Subsanar")
                                                {
                                                    <div class="badge bg-warning">Por Subsanar</div>
                                                }
                                                else if (alumno.Estado == "Rechazado")
                                                {
                                                    <div class="badge bg-danger">Rechazado</div>
                                                }
                                                else if (alumno.Estado == "Aprobado")
                                                {
                                                    <div class="badge bg-success">Aprobado</div>
                                                }
                                            </td>
                                            <td>
                                                <a href="javascript:void(0);" class="me-3 text-info" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Ver">
                                                    <i class="ri-eye-fill font-size-18"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }

                    <!-- Modal Loading -->
                    <div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content text-center p-4">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Cargando...</span>
                                </div>
                                <p class="mt-3">Descargando Formato...</p>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="col-ls-12">
            <div class="card">
                <div class="card-body">
        
                    <h4 class="card-title">Firma Digital</h4>
                    <div style="height: 600px;" class="mb-3">
                        @if (!string.IsNullOrEmpty(pdfUrl))
                        {
                            <iframe src="@pdfUrl" width="100%" height="100%" style="border: none;"></iframe>
                        }
                        else
                        {
                            <p>Cargando documento...</p>
                        }
                    </div>
                    <div>
                        <div class="d-grid mb-3">
                            <button type="button" class="btn btn-primary btn-lg waves-effect waves-light" @onclick="Paso1EnviarParaFirma">Iniciar Firma</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<center>
    <form type="post" id="ssoForm" name="ssoForm" target="iframeFirma" action="https://firmadorsignnet.cmp.org.pe:8443/SignnetSignature/Servicio" accept-charset="ISO-8859-1" style="display:none">
        <h1>Prueba de Firma Digital</h1>
        <table>
            <tr>
                <td>Codigo de Firma:</td>
                <td>
                    <input type="text" id="codigoFirma" name="codigoFirma" value="13052" size="40">
                </td>
            </tr>
        </table>
        <br />
        <input type="button" class="btn btn-primary" style="width: 100px !important" id="btnFirma" name="btnFirma" value="Firma">
        <br /><br />
    </form>
    <!-- Modal de Bootstrap -->
    <div id="dvIframe" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <iframe frameborder="0" name="iframeFirma" id="iframeFirma" width="550px" height="320px"></iframe>
                </div>
            </div>
        </div>
    </div>
</center>
<script>
    let componenteRazor;
    window.registrarInstanciaDotNet = function (instancia) {
        componenteRazor = instancia;
    };
    window.mostrarFormularioFirma = function (codigoFirma) {
        document.getElementById("codigoFirma").value = codigoFirma;
        $('#dvIframe').modal({ backdrop: 'static', keyboard: false, show: true });
        document.getElementById("ssoForm").submit();
    }
    window.obtenerCodigoFirmaDesdeFormulario = function () {
        return document.getElementById("codigoFirma").value;
    };

    // Escucha del mensaje desde el iframe (respuesta de SignNet)
    window.addEventListener("message", function (e) {
        try {
            var rptJSON = JSON.parse(e.data);
            console.log("Respuesta recibida:", rptJSON);
            console.log("Respuesta recibida codigoFirma:", rptJSON.resultado);
            $('#dvIframe').modal('hide');

            if (componenteRazor && rptJSON.resultado === "0") {
                componenteRazor.invokeMethodAsync('SubirDocumentoFirmado', JSON.stringify(rptJSON))
                    .then(() => console.log("Método C# invocado con éxito"))
                    .catch(err => console.error("Error al invocar método C#", err));
            } else {
                console.warn("Firma fallida o instancia no disponible");
            }
        } catch (ex) {
            console.error("Error en respuesta del iframe", e.data);
        }
    });
</script>

@code {
    private bool seleccionarTodos = false;
    private string tabActiva = "nacionales";
    private string pdfUrl;
    private DotNetObjectReference<FirmarDiplomas>? dotNetRef;

    protected override void OnInitialized()
    {
        // Puedes usar esta lógica si conoces el nombre del archivo
        pdfUrl = "https://localhost:5181/firmas_digitales/documento_1235.pdf";
    }
    private List<ListadoPrematricula> alumnos = new()
    {
        new ListadoPrematricula {Id=12, Numero = "89451512", NombreCompleto = "Gerardo Mendez",     FechaNacimiento = "09/10/2021", LugarNacimiento = "Madre de Dios", Estado = "Aprobado" },
    };
    private List<ListadoPrematricula> alumnos2 = new()
    {
        new ListadoPrematricula {Id=5,  Numero = "000189451518", NombreCompleto = "Gina Nuñez",         FechaNacimiento = "04/11/1998", LugarNacimiento = "Madre de Dios", Estado = "Aprobado" },
    };

    private async Task ConfirmarEliminacion(int id)
    {
        var confirmado = await JS.InvokeAsync<bool>("confirmarSweet", "¿Estás seguro?", "Esta acción no se puede deshacer");

        if (confirmado)
        {
            // Eliminar lógica aquí
            Console.WriteLine($"Eliminado: {id}");
        }
    }

    private async Task DescargarFormato()
    {
        await JS.InvokeVoidAsync("mostrarModal", "#loadingModal");

        // Simular una descarga
        await Task.Delay(2000);

        await JS.InvokeVoidAsync("ocultarModal", "#loadingModal");

        // Aquí puedes agregar la lógica real de descarga
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("inicializarDataTable", "#tblListadoConsejoRegional");
            dotNetRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("registrarInstanciaDotNet", dotNetRef);
        }
    }

    private void SeleccionarTodasFilas(ChangeEventArgs e)
    {
        seleccionarTodos = (bool)e.Value;
        foreach (var alumno in alumnos)
        {
            alumno.Seleccionado = seleccionarTodos;
        }
    }

    private async Task FirmarDigitalmente()
    {
        var seleccionados = alumnos.Where(a => a.Seleccionado).ToList();

        if (!seleccionados.Any())
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "warning",
                title = "Seleccione al menos un registro para firmar",
                showConfirmButton = true
            });
            return;
        }

        if (seleccionados.Count == 1)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "success",
                title = $"Firma individual para: {seleccionados.First().NombreCompleto}",
                showConfirmButton = true
            });
        }
        else
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "info",
                title = $"Firma masiva para {seleccionados.Count} alumnos",
                showConfirmButton = true
            });
        }

        // Aquí iría tu lógica real de firma
    }


    private void CambiarTab(string tab)
    {
        tabActiva = tab;
    }
    
    private async Task IniciarFirma()
    {
        // Mostrar alerta de carga
        await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "warning",
                title = "Iniciando proceso de firma digital...",
                showConfirmButton = true
            });

        try
        {
            var firmaRequest = new
            {
                IdExpedienteDocumento = 1235,
                IdExpedienteDocumentoFirmante = 0,
                TipoDocumentoFirmado = 0
            };

            // Paso 1: Enviar documento para firma
            var responseFirma = await Http.PostAsJsonAsync("api/firmadigital/firmar", firmaRequest);

            if (responseFirma.IsSuccessStatusCode)
            {
                var resultadoFirma = await responseFirma.Content.ReadFromJsonAsync<UploadResponse>();
            
                if (resultadoFirma?.codigoFirma > 0)
                {
                    // Paso 2: Subir documento firmado
                    var uploadRequest = new
                    {
                        IdExpedienteDocumento = 1235,
                        IdExpedienteDocumentoFirmante = 0,
                        CodigoFirma = resultadoFirma.codigoFirma
                    };
                    DownloadResponse? resultadoUpload = null;
                    
                    var responseUpload = await Http.PostAsJsonAsync("api/firmadigital/upload", uploadRequest);

                    if (responseUpload.IsSuccessStatusCode)
                    {
                        resultadoUpload = await responseUpload.Content.ReadFromJsonAsync<DownloadResponse>();
                    
                        await JS.InvokeVoidAsync("Swal.fire", new 
                        {
                            icon= "success",
                            title = resultadoUpload.descripcion,
                            showConfirmButton = false
                        });
                    }
                    else
                    {
                        var error = await responseUpload.Content.ReadAsStringAsync();
                        await MostrarErrorSweetAlert("Error al subir documento firmado", error);
                    }
                }
                else
                {
                    await MostrarErrorSweetAlert("Error en el proceso de firma", 
                        resultadoFirma?.descripcion ?? "Error desconocido");
                }
            }
            else
            {
                var error = await responseFirma.Content.ReadAsStringAsync();
                await MostrarErrorSweetAlert("Error al enviar documento para firma", error);
            }
        }
        catch (Exception ex)
        {
            await MostrarErrorSweetAlert("Error inesperado", ex.Message);
        }
    }

    private async Task Paso1EnviarParaFirma()
    {
        var firmaRequest = new
        {
            IdExpedienteDocumento = 1235,
            IdExpedienteDocumentoFirmante = 0,
            TipoDocumentoFirmado = 0
        };

        var responseFirma = await Http.PostAsJsonAsync("api/firmadigital/firmar", firmaRequest);

        if (responseFirma.IsSuccessStatusCode)
        {
            var resultadoFirma = await responseFirma.Content.ReadFromJsonAsync<UploadResponse>();

            if (resultadoFirma?.codigoFirma > 0)
            {
                // Llenar el input oculto con el código de firma
                await JS.InvokeVoidAsync("mostrarFormularioFirma", resultadoFirma.codigoFirma);
            }
            else
            {
                await MostrarErrorSweetAlert("Error en el proceso de firma",
                    resultadoFirma?.descripcion ?? "Error desconocido");
            }
        }
        else
        {
            var error = await responseFirma.Content.ReadAsStringAsync();
            await MostrarErrorSweetAlert("Error al enviar documento para firma", error);
        }
    }
    [JSInvokable]
    public async Task SubirDocumentoFirmado(string rptJsonStr)
    {
        try
        {
            var rptJson = JsonSerializer.Deserialize<RespuestaSignNet>(rptJsonStr);

            if (rptJson?.resultado == "0")
            {
                // Obtener el valor de codigoFirma desde el input del DOM
                string codigoFirma = await JS.InvokeAsync<string>("obtenerCodigoFirmaDesdeFormulario");

                var uploadRequest = new
                {
                    IdExpedienteDocumento = 1235,
                    IdExpedienteDocumentoFirmante = 0,
                    CodigoFirma = int.Parse(codigoFirma)
                };

                var responseUpload = await Http.PostAsJsonAsync("api/firmadigital/upload", uploadRequest);

                if (responseUpload.IsSuccessStatusCode)
                {
                    var resultadoUpload = await responseUpload.Content.ReadFromJsonAsync<DownloadResponse>();
                    await JS.InvokeVoidAsync("Swal.fire", new
                    {
                        icon = "success",
                        title = resultadoUpload?.descripcion ?? "Documento subido correctamente",
                        showConfirmButton = false
                    });
                }
                else
                {
                    var error = await responseUpload.Content.ReadAsStringAsync();
                    await MostrarErrorSweetAlert("Error al subir documento firmado", error);
                }
            }
            else
            {
                await MostrarErrorSweetAlert("Error en la firma digital", rptJson?.estado ?? "Error desconocido");
            }
        }
        catch (Exception ex)
        {
            await MostrarErrorSweetAlert("Error inesperado", ex.Message);
        }
    }

    private async Task MostrarErrorSweetAlert(string titulo, string mensaje)
    {
        await JS.InvokeVoidAsync("Swal.fire", new
        {
            icon= "error",
            title= titulo,
            html= mensaje,
            confirmButtonText= "Aceptar"
        });
    }

    public async ValueTask DisposeAsync()
    {
        dotNetRef?.Dispose();
    }
    // Clase para deserializar JSON
    public class RespuestaSignNet
    {
        public string estado { get; set; }
        public string resultado { get; set; }
        public string sujeto { get; set; }
    }
}

