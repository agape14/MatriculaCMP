@page "/solicitudes/seguimiento"
@using MatriculaCMP.Shared
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims

@inject HttpClient Http
@inject IJSRuntime JS
@inject NavigationManager Nav
@inject AuthenticationStateProvider AuthenticationStateProvider

<div class="container-fluid">
	<!-- start page title -->
	<div class="row">
		<div class="col-12">
			<div class="page-title-box d-sm-flex align-items-center justify-content-between">
                <h4 class="mb-sm-0">Seguimiento Tramite</h4>

				<div class="page-title-right">
					<ol class="breadcrumb m-0">
						<li class="breadcrumb-item"><a href="javascript: void(0);">Inicio</a></li>
                        <li class="breadcrumb-item active">Seguimiento Tramite</li>
					</ol>
				</div>

			</div>
		</div>
	</div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body  pt-0">
                    <ul class="nav nav-tabs nav-tabs-custom mb-4">
                        <li class="nav-item">
                            <a class="nav-link fw-bold p-3 active" href="#">Todos los Trámites</a>
                        </li>
                        @* <li class="nav-item">
                            <a class="nav-link p-3 fw-bold" href="#">Observados</a>
                        </li>    *@
                    </ul>
                    <div class="alert alert-primary mb-2 mt-2" role="alert">
                        <div class="button-items">
                            @* <button type="button" class="btn btn-primary waves-effect waves-light">
                                Primary <i class="ri-arrow-right-line align-middle ms-2"></i>
                            </button> *@
                            <button class="btn btn-primary waves-effect waves-light" @onclick="FirmarDigitalmente" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Firmar Documento Digitalmente">
                                <i class="ri-fingerprint-fill align-middle me-2"></i> Firmar Digitalmente
                            </button>
                            <button type="button" class="btn btn-warning waves-effect waves-light" disabled>
                                <i class="ri-error-warning-line align-middle me-2"></i> Sub sanar
                            </button>
                            @* <button type="button" class="btn btn-danger waves-effect waves-light">
                                <i class="ri-close-line align-middle me-2"></i> Danger
                            </button> *@
                        </div>
                    </div>
                    
                    <div class="col-sm-12">
                       <table id="tblListadoSolicitante" class="table table-centered datatable dt-responsive nowrap dataTable no-footer dtr-inline ml-2 w-100">
                            <thead class="thead-light">
                              @*   <tr>
                                    <th>Nombres Completos</th>
                                    <th>Documento</th>
                                    <th>Celular</th>
                                    <th>Estado</th>
                                    <th>Universidad</th>
                                    <th>Tipo Validación</th>
                                    <th>Fecha Título</th>
                                    <th>Acción</th>
                                </tr> *@

                                <tr>
                                    <th>#</th>
                                    <th>Tipo Solicitud</th>
                                    <th>Fecha Solicitud</th>
                                    <th>Estado</th>
                                    <th>Área Encargada</th>
                                    <th>Observaciones</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                               @*  @foreach (var persona in personas)
                                {
                                    <tr>
                                        <td>@persona.NombresCompletos</td>
                                        <td>@persona.Documento</td>
                                        <td>@persona.Celular</td>
                                        <td>
                                            @if (persona.Estado == "Registrado")
                                            {
                                                <div class="badge bg-success text-white font-size-12">Registrado</div>
                                            }
                                            else if (persona.Estado == "Por Subsanar")
                                            {
                                                <div class="badge bg-warning text-white font-size-12">Por Subsanar</div>
                                            }
                                            else if (persona.Estado == "Rechazado")
                                            {
                                                <div class="badge bg-danger text-white font-size-12">Rechazado</div>
                                            }
                                            else
                                            {
                                                <div class="badge bg-success text-white font-size-12">Registrado</div>
                                            }
                                        </td>
                                        <td>@(persona.Educaciones.FirstOrDefault()?.UniversidadId ?? 0)</td>
                                        <td></td>
                                        <td>
                                            @(persona.Educaciones.FirstOrDefault()?.FechaEmision) <br />
                                            <button class="btn btn-light btn-rounded" @onclick="DescargarFormato">
                                                Descargar <i class="mdi mdi-download ms-2"></i>
                                            </button>
                                        </td>
                                        <td>
                                            <a href="/solicitudes/prematricula" class="me-3 text-warning" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Sub sanar Pre Matricula">
                                                <i class="ri-error-warning-line font-size-18"></i>
                                            </a>
                                            <a href="javascript:void(0);" class="text-danger" @onclick="() => ConfirmarEliminacion(persona.PersonaId)" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-original-title="Eliminar registro">
                                                <i class="mdi mdi-trash-can font-size-18"></i>
                                            </a>
                                        </td>
                                    </tr>
                                } *@

                                @if (solicitudes != null && solicitudes.Count > 0)
                                {
                                    int index = 1;
                                    foreach (var s in solicitudes)
                                    {
                                        <tr>
                                            <td>@index</td>
                                            <td>@s.TipoSolicitud</td>
                                            <td>@s.FechaSolicitud.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <span class="badge bg-primary">@s.Estado</span>
                                                @*<span class="badge bg-@GetBadgeColor(s.Estado)">
                                                    @s.Estado
                                                </span> *@
                                            </td>
                                            <td>@(s.AreaNombre ?? "")</td>
                                            <td>@(s.Observaciones ?? "")</td>
                                            <td>
                                                <button class="btn btn-outline-primary btn-sm" @onclick="@(() => VerDetalle(s.Id))">
                                                    <i class="ri-eye-line"></i> Ver
                                                </button>
                                            </td>
                                        </tr>
                                        index++;
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="7" class="text-center">No se encontraron solicitudes</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- Modal Loading -->
                    <div class="modal fade" id="loadingModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered">
                            <div class="modal-content text-center p-4">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Cargando...</span>
                                </div>
                                <p class="mt-3">Descargando Formato...</p>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>

</div>


@code {
    private bool seleccionarTodos = false;
    private List<PersonaConEducacionDto> personas = new();
    private List<SolicitudSeguimientoDto> solicitudes = new();
    private string personaId = "";

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            personaId = user.FindFirst("PersonaId")?.Value ?? "1";
        }

        // personas = await Http.GetFromJsonAsync<List<PersonaConEducacionDto>>("api/personaseducacion/con-educacion");
        solicitudes = await Http.GetFromJsonAsync<List<SolicitudSeguimientoDto>>($"api/personaseducacion/mis-solicitudes/{personaId}");
        await InvokeAsync(StateHasChanged); // Forzar un re-renderizado
    }

    private void VerDetalle(int solicitudId)
    {
        Nav.NavigateTo($"/solicitudes/detalle/{solicitudId}");
    }

    private string GetBadgeColor(string estado)
    {
        return estado switch
        {
            "Registrado" => "primary",
            "Aprobado" => "success",
            "Rechazado" => "danger",
            "Observado" => "warning",
            _ => "secondary"
        };
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && solicitudes?.Count > 0) // Verificar que los datos están cargados
        {
            await JS.InvokeVoidAsync("inicializarDataTable", "#tblListadoSolicitante");
        }
    }
    private async Task ConfirmarEliminacion(int id)
    {
        var confirmado = await JS.InvokeAsync<bool>("confirmarSweet", "¿Estás seguro?", "Esta acción no se puede deshacer");

        if (confirmado)
        {
            // Eliminar lógica aquí
            Console.WriteLine($"Eliminado: {id}");
        }
    }

    private async Task DescargarFormato()
    {
        await JS.InvokeVoidAsync("mostrarModal", "#loadingModal");

        // Simular una descarga
        await Task.Delay(2000);

        await JS.InvokeVoidAsync("ocultarModal", "#loadingModal");

        // Aquí puedes agregar la lógica real de descarga
    }


    private void SeleccionarTodasFilas(ChangeEventArgs e)
    {
        seleccionarTodos = (bool)e.Value;
        foreach (var persona in personas)
        {
            persona.Seleccionado = seleccionarTodos;
        }
    }

    private async Task FirmarDigitalmente()
    {
        var seleccionados = personas.Where(a => a.Seleccionado).ToList();

        if (!seleccionados.Any())
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "warning",
                title = "Seleccione al menos un registro para firmar",
                showConfirmButton = true
            });
            return;
        }

        if (seleccionados.Count == 1)
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "success",
                title = $"Firma individual para: {seleccionados.First().NombresCompletos}",
                showConfirmButton = true
            });
        }
        else
        {
            await JS.InvokeVoidAsync("Swal.fire", new
            {
                icon = "info",
                title = $"Firma masiva para {seleccionados.Count} alumnos",
                showConfirmButton = true
            });
        }

        // Aquí iría tu lógica real de firma
    }

}

