@page "/home"
@using MatriculaCMP.Client.Layout
@using MatriculaCMP.Shared
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization
@inject IJSRuntime JS
@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (!string.IsNullOrEmpty(perfilUsuario) && totalesPorPerfil.ContainsKey(perfilUsuario))
{
    <h3 class="mb-4">Panel de Control - @perfilNombre</h3>

    <div class="row">
        @if( perfilUsuario != "2" )
        {
            @foreach (var item in totalesPorPerfil[perfilUsuario])
            {
                <div class="col-md-3 mb-4">
                    <div class="card text-@(item.colortexto ?? "dark") bg-@item.color shadow">
                        <div class="card-body d-flex align-items-center justify-content-between">
                            <div>
                                <h6 class="card-title text-@(item.colortexto ?? "dark")">@item.titulo</h6>
                                <h3 class="fw-bold text-@(item.colortexto ?? "dark")">@item.valor</h3>
                            </div>
                            <i class="@item.icono text-@(item.colortexto ?? "dark") display-4 opacity-50"></i>
                        </div>
                    </div>
                </div>
            }
        }
        
    </div>
    @if (perfilUsuario == "2")
    {
        <div class="row">
            <div class="col-xl-8">

                <div class="card">
                    <div class="card-body">
                        <div class="float-right d-none d-md-inline-block">
                            <div class="btn-group mb-2">
                                <button type="button" class="btn btn-sm btn-light">Today</button>
                                <button type="button" class="btn btn-sm btn-light active">Weekly</button>
                                <button type="button" class="btn btn-sm btn-light">Monthly</button>
                            </div>
                        </div>
                        <h4 class="card-title mb-4">Revenue Analytics</h4>
                        <div>
                            <div class="table-responsive">
                                <table class="table mb-0">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th>Column heading</th>
                                            <th>Column heading</th>
                                            <th>Column heading</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr class="table-light">
                                            <th scope="row">1</th>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                        </tr>

                                        <tr class="table-success">
                                            <th scope="row">2</th>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                        </tr>

                                        <tr class="table-info">
                                            <th scope="row">3</th>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                        </tr>

                                        <tr class="table-warning">
                                            <th scope="row">4</th>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                        </tr>

                                        <tr class="table-danger">
                                            <th scope="row">5</th>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                            <td>Column content</td>
                                        </tr>
                                    </tbody>
                                </table>

                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-xl-4">
                <div class="card">
                    <div class="card-body">
                        <div class="float-right">
                            <select class="custom-select custom-select-sm">
                                <option selected>Apr</option>
                                <option value="1">Mar</option>
                                <option value="2">Feb</option>
                                <option value="3">Jan</option>
                            </select>
                        </div>
                        <h4 class="card-title mb-4">Sales Analytics</h4>

                        <div id="donut-chart" class="apex-charts"></div>

                        <div class="row">
                            <div class="col-4">
                                <div class="text-center mt-4">
                                    <p class="mb-2 text-truncate"><i class="mdi mdi-circle text-primary font-size-10 mr-1"></i> Product A</p>
                                    <h5>42 %</h5>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="text-center mt-4">
                                    <p class="mb-2 text-truncate"><i class="mdi mdi-circle text-success font-size-10 mr-1"></i> Product B</p>
                                    <h5>26 %</h5>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="text-center mt-4">
                                    <p class="mb-2 text-truncate"><i class="mdi mdi-circle text-warning font-size-10 mr-1"></i> Product C</p>
                                    <h5>42 %</h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end row -->
    }
   
}
else
{
    <div class="alert alert-info d-flex align-items-center" role="alert">
        <div class="spinner-border text-info me-2" role="status">
            <span class="visually-hidden">Cargando...</span>
        </div>
        Cargando...
    </div>
}

@code {
    private string perfilUsuario = "";
    private string perfilNombre = "";

    // Simulando totales por perfil
    private Dictionary<string, List<(string titulo, int valor, string color, string icono, string? colortexto)>> totalesPorPerfil = new();

    private List<int> ventasMensuales = new() { 15, 30, 45, 25 };
    private List<string> meses = new() { "Ene", "Feb", "Mar", "Abr" };

    private List<int> productos = new() { 42, 26, 15 };
    private List<string> productosLabels = new() { "Producto A", "Producto B", "Producto C" };

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated ?? false)
        {
            // Aquí deberías obtener el perfil real del usuario desde tus claims o base de datos
            perfilUsuario = user.FindFirst("PerfilId")?.Value ?? "1"; // Valor de ejemplo
            perfilNombre = user.FindFirst("PerfilNombre")?.Value ?? ""; // Valor de ejemplo
        }

        CargarTotales();
    }

    private void CargarTotales()
    {
        totalesPorPerfil = new()
            {
                ["2"] = new() {
                ("Mis Solicitudes Enviadas", 4, "primary", "ri-folder-3-line", null),
                ("Observadas", 1, "warning", "ri-error-warning-line", null),
                ("Firmas Digitales", 2, "success", "ri-fingerprint-line", null),
                ("Trámites en Proceso", 1, "info", "ri-loop-left-line", null)
            },
                ["3"] = new() {
                ("Solicitudes Recibidas", 280, "primary", "ri-mail-line", null),
                ("Observadas", 35, "warning", "ri-eye-line", null),
                ("Firmas Realizadas", 198, "success", "ri-ink-bottle-line", null),
                ("Diplomas Firmados", 76, "info", "ri-medal-line", null)
            },
                ["4"] = new() {
                ("Solicitudes Recibidas", 280, "primary", "ri-mail-line", null),
                ("Observadas", 35, "warning", "ri-eye-line", null),
                ("Firmas Realizadas", 198, "success", "ri-ink-bottle-line", null),
                ("Diplomas Firmados", 76, "info", "ri-medal-line", null)
            },
                ["3"] = new() {
                ("Solicitudes Evaluadas", 540, "primary", "ri-check-line", null),
                ("Aprobadas", 472, "success", "ri-thumb-up-line", null),
                ("Diplomas Emitidos", 150, "info", "ri-award-line", null),
                ("Firmas Realizadas", 140, "success", "ri-fingerprint-line", null)
            },
                ["5"] = new() {
                ("Solicitudes Evaluadas", 540, "primary", "ri-check-line", null),
                ("Aprobadas", 472, "success", "ri-thumb-up-line", null),
                ("Diplomas Emitidos", 150, "info", "ri-award-line", null),
                ("Firmas Realizadas", 140, "success", "ri-fingerprint-line", null)
            },
                ["7"] = new() {
                ("Solicitudes Autorizadas", 210, "primary", "ri-check-double-line", null),
                ("Nros. Colegiatura Asignados", 198, "success", "ri-number-line", null),
                ("Diplomas Firmados", 88, "info", "ri-medal-line", null)
            },
                ["6"] = new() {
                ("Diplomas para Firma", 63, "warning", "ri-draft-line", null),
                ("Firmados", 60, "success", "ri-verified-badge-line", null),
                ("Enviados", 55, "primary", "ri-send-plane-line", null)
            },
                ["1"] = new() {
                ("Usuarios Creados", 17, "primary", "ri-user-add-line", null),
                ("Perfiles Creados", 6, "info", "ri-shield-user-line", null),
                ("Menús Activos", 4, "success", "ri-menu-3-line", null),
                ("Solicitudes Totales", 2315, "dark", "ri-database-2-line", "white")
            }
            };
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("renderApexChart", ventasMensuales, meses, productos, productosLabels);
        }
    }
}

